services:
  weather-app:
    build: 
      context: ./weather_site
      dockerfile: Dockerfile
    restart: always
    container_name: weather-app
    env_file:
      - ./.env
    ports:
      - 8000
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi:application
    volumes:
      - logs_volume:/opt/app/log
      - static_volume:/opt/app/static
    networks:
      - weather-network
    depends_on:
      - redis
      - postgres   
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - 6379
    networks:
      - weather-network
    volumes:
      - redis_data:/root/redis
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - ./.env
    ports:
      - '5432:5432'
    networks:
      - weather-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
  gateway:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    container_name: gateway
    ports:
      - '80:80'
    networks:
      - weather-network
    volumes:
      - static_volume:/opt/app/static

networks:
  weather-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  logs_volume:
  static_volume:
